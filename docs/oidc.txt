OIDC服务 
前⾔ 
太可怕了，在2233年bangumi的⽤户量居然达到了数⼗
亿！它需要分出⼀个新的业务叫bangumoe，提供⽤户注册
并管理⾃⼰的基本信息的功能，同时对外提供OIDC的服
务。
由于各种原因，这个锅分给了⼩l来做，但是 就在今天！⽥
中ロミオ的新作終のステラ发售了！⼩l已经等不及开玩
了，没有时间写锅，你发誓会为世界上所有的美好⽽战
于是你主动接下了这个锅。
阶段⼀ 
，
⾸陀罗
基本要求 
你需要实现最基本的⽤户注册登录和修改信息的API。
关于这个功能，你需要考虑⽤⼀个合适的数据库储存数据，
⽤户的信息⾄少包括⽤户名、密码、邮箱、昵称、头像、简
介。
接⼝的实现最好考虑使⽤你熟悉的语⾔的⼀个后端框架
（当然你要⼿搓socket⼩l也拦不住你）
进阶内容 
你可不能让⽤户随意注册账号，⽤户需要提供邮箱，在注册
时，你需要给⽤户发邮件，⽤户点击后才能注册成功
如果你还有余⼒，可以想办法限制⽤户请求邮件的频率。
阶段⼆ 
吠舍
基本要求 
OIIDC是⼀个基于OAuth的协议，本阶段建议你先了解
OAuth2.0的过程
基本的⽤户功能实现后，就可以开始做OAuth了。
在本阶段你需要实现⼀个可以对外提供的使⽤
Authorization Code模式的OAuth2.0服务的功能
在这个流程中，bangumoe将作为idp，OAuth协议流程包
括以下⼏个步骤：
A、Client 请求 Resource Owner 的授权。授权请求可以
直接向 Resource Owner 请求，也可以通过 
Authorization Server 间接的进⾏
B、Client 获得授权许可
C、Client 向 Authorization Server 请求 Access Token
 D、Authorization Server 验证授权许可，如果有效则颁发 
Access Token
 E、Client 通过访问令牌从 Resource Server 请求受保护
资源
F、Resource Server 验证访问令牌，有效则响应请求
具体流程细节请⾃⾏参考文档！https://www.rfc-editor.or
 g/rfc/rfc6749
上⾯是为了⽅便讲解的简化图，完整图如下
阶段三 
刹帝利
分为两个不同需求，但都需要完成
Refresh Token 
阶段⼆中流程1~6中并没有涉及图中的Refresh Token的流
程，在阶段三中你需要实现它。
当Access Token过期时，可以使⽤Refresh Token来获得
新的Access Token
符合规范的OAuth2.0 
你需要实现⼀个尽量好的OAuth2的Authorization Code模
式，最好最好把文档了解清楚
具体要求为：⽤户在每个步骤都会使⽤规范的request格式
和正确的param，bangumoe也需要根据⽤户请求做出规范
的response
⽐如，在图中的A步骤中，⽤户的request中可能会携带
state参数，了解它的意义，你的bangumoe需要做出正确
的response
⽐如，Authorization Server会验证redirect_uri是否和注
册的⼀致。
bengumoe的OAuth2.0当然需要做到这些。
如果你在阶段⼆已经写的符合规范了，那么就可以忽视这⼀
要求。
阶段四 
婆罗⻔
基本要求 
到了这个阶段，你的OAuth2.0已经相当完备了，OIDC是基
于OAuth2.0的协议，开始实现OIDC吧！你只需要实现
OIDC的核⼼功能，提供ID Token（它是JWT格式的）。为
了不让你误会导致实现了太多OIDC的功能，⼩l让你参考htt
 ps://www.cnblogs.com/linianhui/p/openid-connect-core.
 html这⾥⾯写的东⻄就好（当然，单纯看这个是不太能学会
怎么实现OIDC的）
你需要实现对以下scopes的⽀持
"scopes_supported": [
 "openid",
 "email",
 "profle"
 ],
如果你需要OIDC的文档：https://openid.net/connect/
同样的，你的OIDC只需要实现授权码⽅式
(response_type=code)。最好先了解OIDC和OAuth2.0的
区别。
最后，提供⼀个
.well
known/openid
confguration 
的
接⼝让⽤户知道如何接⼊oidc，可以参考https://accounts.
 google.com/.well-known/openid-configuration
阶段五 
原神玩家
该阶段并不是核⼼要求，只是⼀个后端需求，如果你实在不
擅⻓后端的开发，可以尝试把它跳过
基本要求 
简单的⽤户信息并没有什么实际意义。为了让它看上去有点
⽤，你需要参考bangumi，提供⼀个番剧收藏功能。
番剧数据只需要包括：番剧名、话数、导演。⽤户可以有5
种收藏类型：
同时可以在收藏时对番剧进⾏评价，包括评分、吐槽（不
需要标签）
⽤户可以随时查看和搜索⾃⼰的收藏
（私货，顺便安利⼀⼿双城之战）
进阶内容 
⽤户可以添加其他⽤户为好友，在添加后，好友在收藏或
评价番剧时，⽤户都能看到对应信息。
阶段六 
⽶⼤将
基本要求 
但即使这样，你还是会不经反思到：“它真的有⽤吗?”，管
他呢。
经过⼀番努⼒bangumoe终于可以⽤了，bangumoe上线后
⽤户向⼩l抱怨：爷为啥要⾃⼰把数据再保存⼀遍到你这个
烂平台啊！
⼩l猛然发现bangumi提供了⾃⼰的api：https://github.co
 m/bangumi/api。
为了让⼴⼤阿宅更好地追番，⼩l需要你的服务提供绑定
bangumi账号的API，在绑定之后，将bangumi的对应数据
同步到对应⽤户的数据中。
tips:本质上核⼼功能就是做⼀个OAuth2.0的客户端。
（编题者确实
没有⽤过
bangumi的OAuth，如果这个阶段
遇到了什么奇怪的问题，建议
为可能是真的不能实现）
不要死磕
，告诉编题者，因
编题者仔细看了看，bangumi提供了完整的OAuth2.0服
务，因此，在阶段⼆中你接触了state参数，在这个阶段，
你的客户端在请求Authorization Code也需要使⽤state，
以防⽌CSRF攻击
后续要求
⾄此你已经做完了OIDC的全部内容！⼩l诚邀您来参与到
Bingyan SSO
的开发中
⼩l的想法：阶段五和六不需要实现OIDC就能做完，这两个
阶段在⼩l看来没有OIDC重要，如果你实在⽆法实现阶段
四，那就试试实现五和六吧，但如果可以还是先实现OIDC
 Q&A 
Q:我在某个功能的实现上实在是卡住了，可以跳过它去实现
其他功能/下⼀个阶段的功能吗？
A:这是可以的，但是你需要在验收的时候讲清楚。⽐如你实
在很会写后端、且实在写不出OAuth2.0，那也只好先把阶
段五做了再说。
Q:有的阶段我觉得与最终功能没有联系，我可以跳着做吗？
A:我们建议你按照阶段的顺序做，当然如果你熟知后端，你
可以跳着做或者把两个阶段放在⼀起做。如果你把某个阶段
省去了，你需要在验收的时候讲清楚。
Q:我在做的时候有⼀个绝妙的点⼦，这⾥写不下，我能写成
代码吗？
A:你当然可以在⼀些功能中加⼊⾃⼰的设计，会作为加分
项，实习题中也的确有可以设计和优化的地⽅。
Q：这个题⽬阶段好多诶，会不会我完成的阶段很多就⽐其
他阶段少的题⽬有优势呢？
A：我们在验收时会综合考量你在实习期间的表现和你实习
任务的完成度、同时当然也会考虑不同题⽬的难度差异。所
以尽你所能好好表现吧！
Q：进阶内容⼀定要做吗？
A：它是加分项，但不属于核⼼功能。故不作强制要求。
Q:⼩l是谁？
A:她是⼆次元美少⼥